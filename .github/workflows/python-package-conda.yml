name: Python Package without Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    services:
      auth-postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: authdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest pytest-cov

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Alembic migrations
      run: |
        alembic upgrade head

    - name: Test with pytest and collect coverage
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: backend/coverage-go.out
        fail_ci_if_error: true
        verbose: true

    - name: Check Coverage Percentage
      run: |
          echo "📊 Checking minimum required coverage..."
          COVERAGE=$(pytest --cov=./ --cov-report=term | grep "TOTAL" | awk '{print $NF}' | sed 's/%//')
          echo "Coverage obtained: $COVERAGE%"
          
          if (( $(echo "$COVERAGE < 75" | bc -l) )); then
            echo "❌ Error: Coverage is below 75%. Deployment is blocked."
            exit 1
          fi
      
          echo "✅ Coverage is 75% or more. Continuing."
      
          
    - name: Deploy to production
      if: github.ref == 'refs/heads/main' && success()
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}